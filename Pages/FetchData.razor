@page "/fetchdata"

@using Fluxor
@using FlashCardsWasm.Store.FetchDataUseCase
@using static FlashCardsWasm.Store.FetchDataUseCase.Actions
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@inject IState<FetchDataState> _fetchDataState


@if (_fetchDataState.Value.Error != null)
{
    <MudAlert Severity="Severity.Error">@_fetchDataState.Value.Error</MudAlert>
}
else
{
    <MudGrid Class="mt-4">
        <MudItem xs="12" sm="12" md="12">
            <MudText Typo="Typo.h3">Weather forecast</MudText>
            <MudText Typo="Typo.subtitle1">This component demonstrates fetching data from a service.</MudText>
        </MudItem>
        <MudItem xs="12" sm="12" md="12">
            <MudTable Items="@_fetchDataState.Value.Forecasts" Hover="true" Breakpoint="Breakpoint.Md" Loading="@_fetchDataState.Value.IsLoading"
        LoadingProgressColor="Color.Info">
                <HeaderContent>
                    <MudTh>Date</MudTh>
                    <MudTh>Temp. (C)</MudTh>
                    <MudTh>Temp. (F)</MudTh>
                    <MudTh>Summary</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Date">@context.Date</MudTd>
                    <MudTd DataLabel="TempC">@context.TemperatureC</MudTd>
                    <MudTd DataLabel="TempF">@context.TemperatureF</MudTd>
                    <MudTd DataLabel="Summary">@context.Summary</MudTd>
                </RowTemplate>
            </MudTable>
        </MudItem>
    </MudGrid>
}



@code {
    [Inject]
    public IDispatcher Dispatcher { get; set; }

    protected override void OnInitialized()
    {
        Dispatcher.Dispatch(new FetchDataAction());
        base.OnInitialized();
    }
}
